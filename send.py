#–Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
from main import bot, DATABASE_NAME, get_schedule_scheduleDb, generate_menu
from datetime import datetime, date
import sqlite3

def show_schedule_handler(message):
    conn_message = sqlite3.connect(DATABASE_NAME)
    cursor_message = conn_message.cursor()
    cursor_message.execute("SELECT name FROM message WHERE id = ?", (message.chat.id,))
    group_name = cursor_message.fetchone()[0]

    today = date.today()

    schedule_data = get_schedule_scheduleDb(today, group_name)

    schedule_for_today = []
    for row in schedule_data:
        schedule_date = datetime.strptime(row[1], '%d-%m-%Y').date()
        if schedule_date == today:
            schedule_for_today.append(row)

    if schedule_for_today:
        schedule_text = "–ü—Ä–∏–≤–µ—Ç, —Ç–≤–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:\n"
        for row in schedule_data:
            schedule_text += f"–î–µ–Ω—å: {row[1]}\n–í—Ä–µ–º—è: {row[2]}\n–ü—Ä–µ–¥–º–µ—Ç: {row[3]}\n–û–ø–∏—Å–∞–Ω–∏–µ: {row[4]}\n–ì—Ä—É–ø–ø–∞: {row[5]}\n–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å: {row[6]}\n–°—Å—ã–ª–∫–∞: {row[7]}\n\n"
        m = schedule_text
        if len(m) > 4095:
            for x in range(0, len(m), 4095):
                bot.reply_to(message, text=m[x:x + 4095])
        else:
            bot.reply_to(message, text=m)
    else:
        bot.send_message(message.chat.id, "–ù–∞ —Å–µ–≥–æ–¥–Ω—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç. ü§î", reply_markup=generate_menu())