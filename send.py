
import telebot
import sqlite3
from datetime import date
from db.schedule_db import ScheduleDB

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
table_name = "Netology"
schedule = ScheduleDB()
schedule.createNewGroup(table_name)

BOT_TOKEN = '6324418773:AAFReFGni232-0CACfsQvNPdwEs5YM58nuo'

MAX_MESSAGE_LENGTH = 4095

DATABASE_NAME = "message.db"
DATABASE_SCHEDULE = "schedule.db"

MAX_MESSAGE_LENGTH = 4095

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = telebot.TeleBot(BOT_TOKEN)


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
def send_schedule_to_users():
    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
    conn_users = sqlite3.connect(DATABASE_NAME)
    cursor_users = conn_users.cursor()

    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    cursor_users.execute("SELECT id, name FROM message")
    users = cursor_users.fetchall()
    conn_users.close()

    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º
    conn_schedule = sqlite3.connect(DATABASE_SCHEDULE)
    cursor_schedule = conn_schedule.cursor()

    # –ü–æ–ª—É—á–∞–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è –¥–ª—è –≤—Å–µ—Ö –≥—Ä—É–ø–ø
    today = date.today().strftime('%d-%m-%Y')
    cursor_schedule.execute("SELECT * FROM Netology WHERE date = ?", (today,))
    schedule_data = cursor_schedule.fetchall()

    # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø–æ –≥—Ä—É–ø–ø–∞–º
    schedule_by_group = {}
    for row in schedule_data:
        group_name = row[5]
        if group_name not in schedule_by_group:
            schedule_by_group[group_name] = []
        schedule_by_group[group_name].append(row)

    # –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
    for user_id, group_name in users:
        user_schedule = schedule_by_group.get(int(group_name))

        if user_schedule:
            schedule_text = f"–ü—Ä–∏–≤–µ—Ç, —Ç–≤–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è –¥–ª—è –≥—Ä—É–ø–ø—ã {group_name}:\n"
            for row in user_schedule:
                schedule_text += (
                    f"–î–µ–Ω—å: {row[1]}\n"
                    f"–í—Ä–µ–º—è: {row[2]}\n"
                    f"–ü—Ä–µ–¥–º–µ—Ç: {row[3]}\n"
                    f"–û–ø–∏—Å–∞–Ω–∏–µ: {row[4]}\n"
                    f"–ì—Ä—É–ø–ø–∞: {row[5]}\n"
                    f"–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å: {row[6]}\n"
                    f"–°—Å—ã–ª–∫–∞: {row[7]}\n\n"
                )

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —É—á–µ—Ç–æ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –¥–ª–∏–Ω—ã
            if len(schedule_text) > MAX_MESSAGE_LENGTH:
                for x in range(0, len(schedule_text), MAX_MESSAGE_LENGTH):
                    bot.send_message(user_id, text=schedule_text[x:x + MAX_MESSAGE_LENGTH])
            else:
                bot.send_message(user_id, text=schedule_text)
        else:
            bot.send_message(user_id, "–ù–∞ —Å–µ–≥–æ–¥–Ω—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç. ü§î")
    conn_schedule.close()


# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º—ã
send_schedule_to_users()
