#–Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
import sqlite3
from datetime import date, datetime
import telebot
from telebot import types
import time

BOT_TOKEN = '6324418773:AAEIWge54hrrxGvRnJepfgLC4y7u_A7Me_A'
USERS_DATABASE = 'message.db'
SCHEDULE_DATABASE = 'schedule.db'
bot = telebot.TeleBot(BOT_TOKEN)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
def get_schedule_scheduleDb(date, group_name):
    conn = sqlite3.connect(SCHEDULE_DATABASE)
    cursor = conn.cursor()
    cursor.execute(
        "SELECT * FROM schedule WHERE schedule_date = ? AND group_name = ?",
        (date.strftime('%d-%m-%Y'), group_name))
    schedule_data = cursor.fetchall()
    conn.close()
    return schedule_data


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
def send_schedule_to_users():
    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
    conn_users = sqlite3.connect(USERS_DATABASE)
    cursor_users = conn_users.cursor()

    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    cursor_users.execute(
        "SELECT id, name FROM message")
    users = cursor_users.fetchall()
    conn_users.close()

    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º
    conn_schedule = sqlite3.connect(SCHEDULE_DATABASE)
    cursor_schedule = conn_schedule.cursor()

    # –ü–æ–ª—É—á–∞–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è –¥–ª—è –≤—Å–µ—Ö –≥—Ä—É–ø–ø
    today = date.today().strftime('%d-%m-%Y')
    cursor_schedule.execute("SELECT * FROM schedule WHERE schedule_date = ?",
                           (today,))
    schedule_data = cursor_schedule.fetchall()

    # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø–æ –≥—Ä—É–ø–ø–∞–º
    schedule_by_group = {}
    for row in schedule_data:
        group_name = row[5]
        if group_name not in schedule_by_group:
            schedule_by_group[group_name] = []
        schedule_by_group[group_name].append(row)

    # –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
    for user_id, group_name in users:
        user_schedule = schedule_by_group.get(group_name)
        if user_schedule:
            schedule_text = f"–ü—Ä–∏–≤–µ—Ç, {group_name}, —Ç–≤–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:\n"
            for row in user_schedule:
                schedule_text += f"–í—Ä–µ–º—è: {row[2]}\n–ü—Ä–µ–¥–º–µ—Ç: {row[3]}\n–û–ø–∏—Å–∞–Ω–∏–µ: {row[4]}\n–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å: {row[6]}\n–°—Å—ã–ª–∫–∞: {row[7]}\n\n"

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —É—á–µ—Ç–æ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –¥–ª–∏–Ω—ã
            if len(schedule_text) > 4095:
                for x in range(0, len(schedule_text), 4095):
                    bot.send_message(user_id, text=schedule_text[x:x + 4095])
            else:
                bot.send_message(user_id, text=schedule_text)
        else:
            bot.send_message(user_id, "–ù–∞ —Å–µ–≥–æ–¥–Ω—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç. ü§î")
    conn_schedule.close()

bot.polling(none_stop=True)